@page "/OfferOverview/Offer/{Id:guid}"
@using XCV.Entities.Enums
@using XCV.Services
@using XCV.Entities
@using DocumentFormat.OpenXml.Drawing
@using System.Globalization

@inject OfferManager _offerManager
@inject EmployeeManager _employeeManager
@inject ProjectManager _projectManager

@if (Offer != null)
{
  <AuthorizeView Roles="@AuthorizationStringBuilder.GetSalesRolesString()">
    <Authorized>

      <div class="row">
        <h3 class="mt-1 ml-3">@Offer.Title</h3>
        <span class="col">
          <a class="float-right" href="OfferOverview/Offer/edit/@Id">
            <button class="btn btn-outline-dark rounded-pill">Bearbeiten</button>
          </a>
        </span>
      </div>
      <div class="row">
        @if (Offer != null && Offer.StartDate.HasValue && Offer.EndDate.HasValue)
        {
          <small class="ml-3">@Offer.StartDate.Value.ToString("d", CultureInfo.CreateSpecificCulture("de-DE")) - @Offer.EndDate.Value.ToString("d",CultureInfo.CreateSpecificCulture("de-DE"))</small>
        }
        else if (Offer != null && Offer.StartDate.HasValue)
        {
          <small class="ml-3">@Offer.StartDate.Value.ToString("d", CultureInfo.CreateSpecificCulture("de-DE")) -  </small> 
        } 
        else if (Offer != null && Offer.EndDate.HasValue){
          <small class="ml-3"> - @Offer.EndDate.Value.ToString("d", CultureInfo.CreateSpecificCulture("de-DE"))</small>
        }
      </div>
      <!--<hr class="solid">-->
      <hr>
      <br>
      <p>
        <a class="float-right" href="OfferOverview/Offer/@Id/DocumentConfigurations">
          <button type="button" class="btn btn-outline-dark btn-sm">Dokumentenkonfiguration</button>
        </a>
        <!--<button type="button" class="btn btn-outline-dark">Dark</button>-->
      </p>
      <br>

      <div class="container-fluid">
        <div class="row">
          <div class="col-sm-9 col-md-9 col-lg-8">
            <h4>
              Mitarbeiter
            </h4>
            <!--<div class="w-100 p-3" style="background-color: #eee;">Width 100%</div>-->
            <div class="card-deck">
              @if (Offer != null && EmployeesLoaded())
              {
                @foreach (var employee in Offer.ShortEmployees)
                {
                  var emp = _employeeManager.GetEmployee(employee.EmployeeId);
                  var rateCardLevel = (int) employee.RateCardLevel;
                  

                  <div class="card mb-3 border-secondary shadow-sm" style="min-width: 40rem; max-width: 54rem">
                    <button class="btn dropdown-toggle rounded" data-toggle="collapse" data-target="#collapseEmployee-@employee.Id">
                      <div class="card-header text-left" style="max-height: 10rem;">
                        <div class="container-fluid">
                          <div class="row">
                            <div class="col-sm-9 col-md-9 col-lg-8 c0">
                              <h3 class="card-title mb-1 mt-2">@emp.FirstName @emp.SurName</h3>
                              <h5 class="card-subtitle mt-0 mb-1">
                                @foreach (var role in employee.SelectedExperience.Roles)
                                {
                                  <div class="col pl-0 ml-0 mr-2">
                                    @role.Name
                                  </div>
                                }
                              </h5>
                              <h5><span class="badge badge-secondary badge-pill mt-1">Rate-Card Level: @rateCardLevel</span></h5>
                              <h5><span class="badge badge-secondary badge-pill ">Geplante wöchentliche Stunden: @employee.PlannedWeeklyHours</span></h5>
                              <h5><span class="badge badge-secondary badge-pill ">Rabatt: @(Math.Round(employee.Discount*100)) %</span></h5>
                            </div>
                            <div class="col-sm-3 col-md-3 col-lg-4 c1">
                              @{
                                string imgSrc;
                                if (emp.ProfilePicture == null)
                                {
                                  imgSrc = "/images/EmployeeImage.png";
                                }
                                else
                                {
                                  var base64 = Convert.ToBase64String(emp.ProfilePicture);
                                  imgSrc = $"data:image;base64,{base64}";
                                }
                              }
                              <img class="rounded w-50 ml-6 mt-1 mb-1 float-right" style="max-height: 7rem; max-width: 7rem;" src="@imgSrc" alt="Profilbild">
                            </div>
                          </div>
                        </div>
                      </div>
                    </button>
                    <div class="card-body collapse in" id="collapseEmployee-@employee.Id">
                      <h5 class="card-title2">Hard Skills</h5>
                      <div class="row ml-1">
                        @foreach (var hardskill in employee.SelectedExperience.HardSkills)
                        {
                          int level = (int) hardskill.Item2;
                          switch (level)
                          {
                            case 1:
                              <h5><span class="badge badge-pill badge-light mr-1">@hardskill.Item1.Name<span class="badge badge-dark badge-pill ml-1">@level</span></span></h5>
                              break;
                            case 2:
                              <h5><span class="badge badge-pill badge-light mr-1">@hardskill.Item1.Name<span class="badge badge-secondary badge-pill ml-1">@level</span></span></h5>
                              break;
                            case 3:
                              <h5><span class="badge badge-pill badge-light mr-1">@hardskill.Item1.Name<span class="badge badge-info badge-pill ml-1">@level</span></span></h5>
                              break;
                            case 4:
                              <h5><span class="badge badge-pill badge-light mr-1">@hardskill.Item1.Name<span class="badge badge-primary badge-pill ml-1">@level</span></span></h5>
                              break;
                          }
                        }
                      </div>
                      <h5 class="card-title2">Soft Skills</h5>
                      <div class="row ml-1">
                        @foreach (var softskill in employee.SelectedExperience.SoftSkills)
                        {
                          <h5><span class="badge badge-pill badge-light mr-1">@softskill.Name</span></h5>
                        }
                      </div>
                      <h5 class="card-title2">Sprachen</h5>
                      <div class="row ml-1">
                        @foreach (var language in employee.SelectedExperience.Languages)
                        {
                          int level = (int) language.Item2;
                          switch (level)
                          {
                            case 1:
                              <h5><span class="badge badge-pill badge-light mr-1">@language.Item1.Name<span class="badge badge-dark badge-pill ml-1">@level</span></span></h5>
                              break;
                            case 2:
                              <h5><span class="badge badge-pill badge-light mr-1">@language.Item1.Name<span class="badge badge-secondary badge-pill ml-1">@level</span></span></h5>
                              break;
                            case 3:
                              <h5><span class="badge badge-pill badge-light mr-1">@language.Item1.Name<span class="badge badge-info badge-pill ml-1">@level</span></span></h5>
                              break;
                            case 4:
                              <h5><span class="badge badge-pill badge-light mr-1">@language.Item1.Name<span class="badge badge-primary badge-pill ml-1">@level</span></span></h5>
                              break;
                            case 5:
                              <h5><span class="badge badge-pill badge-light mr-1">@language.Item1.Name<span class="badge badge-success badge-pill ml-1">@level</span></span></h5>
                              break;
                          }
                        }
                      </div>
                      <h5 class="card-title2">Branchenwissen</h5>
                      <div class="row ml-1">
                        @foreach (var field in employee.SelectedExperience.Fields)
                        {
                          <h5><span class="badge badge-pill badge-light mr-1">@field.Name</span></h5>
                        }
                      </div>
                      <h5 class="card-title2">Projekte</h5>
                      <div class="row ml-1">
                        @foreach (var project in employee.ProjectIds)
                        {
                          var proj = _projectManager.Projects.Find(p => p.Id == project);
                          if (proj != null)
                          {
                            <h5>
                              <span class="badge badge-pill badge-light mr-1 ba0">
                                <button class="btn btn-sm rounded-pill b0" data-toggle="modal" data-target="#ProjectModal-@(proj.Id)"><b>@proj.Title</b></button>
                                <div class="modal fade" id="ProjectModal-@(proj.Id)" tabindex="-1" role="dialog" aria-labelledby=@(new String(employee.EmployeeId.ToString() + "Hardskill" + "Aria")) aria-hidden="true">
                                  <div class="modal-dialog modal-lg">
                                    <div class="modal-content">
                                      <div class="modal-header">
                                        <h4 class="modal-title" id="Title@(proj.Id)">Projekttätigkeiten in @proj.Title</h4>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                          <span aria-hidden="true">&times;</span>
                                        </button>
                                      </div>
                                      <div class="modal-body mb-0">
                                        @if (ProjectActivities.ContainsKey(employee.Id))
                                        {
                                          @foreach (var projectAvtivity in ProjectActivities[employee.Id])
                                          {
                                            <div class="row ml-1 mb-3">
                                              <h5>@projectAvtivity.Description</h5>
                                            </div>
                                          }
                                        }
                                      </div>
                                      <div class="modal-footer mt-0">
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </span>
                            </h5>
                          }
                        }
                      </div>
                    </div>
                  </div>
                }
              }
              <!--<button type="button" class="btn btn-outline-dark btn-sm ml-3">Mitarbeiter hinzufügen</button>-->
            </div>
          </div>
          <div class="col-sm-3 col-md-3 col-lg-4">
            <h4>
              Hard Skills
            </h4>
            <div class="row ml-1">
              @if (Offer != null)
              {
                @foreach (var hardskill in Offer.Experience.HardSkills)
                {
                  <h4><span class="badge badge-pill badge-light mr-1">@hardskill.Item1.Name</span></h4>
                }
              }
            </div>
            <br>
            <h4>
              Soft Skills
            </h4>
            <div class="row ml-1">
              @if (Offer != null)
              {
                @foreach (var softskill in Offer.Experience.SoftSkills)
                {
                  <h4><span class="badge badge-pill badge-light mr-1">@softskill.Name</span></h4>
                }
              }
            </div>
            <br>
            <h4>
              Sprachen
            </h4>
            <div class="row ml-1">
              @if (Offer != null)
              {
                @foreach (var language in Offer.Experience.Languages)
                {
                  <h4><span class="badge badge-pill badge-light mr-1">@language.Item1.Name</span></h4>
                }
              }
            </div>
            <br>
            <h4>
              Branchen
            </h4>
            <div class="row ml-1">
              @if (Offer != null)
              {
                @foreach (var field in Offer.Experience.Fields)
                {
                  <h4><span class="badge badge-pill badge-light mr-1">@field.Name</span></h4>
                }
              }
            </div>
            <br>
            <h4>
              Rollen
            </h4>
            <div class="row ml-1">
              @if (Offer != null)
              {
                @foreach (var role in Offer.Experience.Roles)
                {
                  <h4><span class="badge badge-pill badge-light mr-1">@role.Name</span></h4>
                }
              }
            </div>
          </div>
        </div>
      </div>

    </Authorized>
    <NotAuthorized>
      <NoAuthorisation/>
    </NotAuthorized>
  </AuthorizeView>
}
else
{
  <AuthorizeView Roles="@AuthorizationStringBuilder.GetSalesRolesString()">
    <Authorized>
      
      <div class="row">
        <h3>Angebotsdetailansicht</h3>
      </div>
      <hr>
      <br>
      
      Leider kann Ihre Anfrage keinem existierenden Angebot zugeordnet werden. 


    </Authorized>
      <NotAuthorized>
        <NoAuthorisation/>
      </NotAuthorized>
    </AuthorizeView>
  
  }